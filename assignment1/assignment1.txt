Web Page:
    A web page is a single document or file containing content that is accessible on the World Wide Web.
It is typically written in HTML (Hypertext Markup Language) and may include additional technologies such as CSS 
(Cascading Style Sheets) for styling and JavaScript for interactivity.
Web pages can vary in complexity and content, ranging from simple text documents to multimedia-rich pages with images, 
videos, forms, and interactive elements.
Each web page is identified by a unique URL (Uniform Resource Locator) or web address, which specifies its location on
the internet and allows users to access it using a web browser.

 Website:
    A website is a collection of related web pages and associated content that are hosted on a web server and can be 
accessed over the internet.
It typically consists of multiple web pages interconnected through hyperlinks and organized hierarchically or in a 
navigational structure.
Websites often serve a specific purpose, such as providing information about a company, offering products or 
services, sharing educational content, or hosting online communities.

Frontend:
    The frontend, also known as the client-side, refers to the part of a web application or website that users 
    interact with directly in their web browsers.
It encompasses the user interface (UI) components, presentation layer, and client-side logic responsible for rendering 
and displaying content to users.
Frontend technologies and tools include:
HTML (Hypertext Markup Language): Markup language used for structuring web pages.
CSS (Cascading Style Sheets): Styling language used for controlling the presentation and appearance of web pages.
JavaScript: Programming language used for adding interactivity, dynamic behavior, and client-side logic to web pages.
Frontend frameworks and libraries such as React.js, Angular, Vue.js, and jQuery, which provide pre-built components 
and utilities for building interactive web applications.
Frontend development tools like code editors (e.g., Visual Studio Code, Sublime Text), version control systems (e.g., 
Git), and task runners/build tools (e.g., Webpack, Gulp) to streamline the development process.

Backend:
    The backend, also known as the server-side, refers to the part of a web application or website that operates on 
    the server and is responsible for handling requests, processing data, and generating dynamic content.
It encompasses the server-side logic, database interactions, business logic, and APIs (Application Programming 
Interfaces) that support the functionality of the application.
Backend technologies and tools include:
Programming languages such as Python (with frameworks like Django and Flask), JavaScript (with Node.js and Express.js),
 Ruby (with Ruby on Rails), Java (with Spring Boot), PHP (with Laravel and Symfony), and many others, used for 
 server-side development.
Databases such as MySQL, PostgreSQL, MongoDB, SQLite, and Redis, used for storing and retrieving data.
Web servers such as Apache, Nginx, and Microsoft IIS, used for serving web pages and handling HTTP requests.
Backend frameworks and libraries that provide tools and utilities for building server-side applications, handling 
routing, authentication, middleware, and more.
Backend development tools like integrated development environments (IDEs), database management systems (DBMS), and 
testing frameworks to support backend development tasks.

what is the use of git and what are the differences between git and github
Git is a distributed version control system (VCS) primarily used for tracking changes in source code during software 
development. It provides a collaborative environment for developers to work on projects, manage codebases, and 
coordinate changes efficiently.

Git:
    Git is a distributed version control system (DVCS) designed for tracking changes in source code and coordinating 
    collaborative development efforts.
    It is a command-line tool that runs locally on a developer's machine and does not require a central server to 
    operate.
    Git manages repositories, branches, commits, and merges, providing core version control functionalities.

GitHub:
    GitHub is a web-based hosting service for Git repositories, providing additional features and functionalities 
    beyond basic version control.
    It offers a platform for hosting Git repositories in the cloud, allowing developers to store, share, and 
    collaborate on projects remotely.
    GitHub provides a graphical user interface (GUI) for interacting with Git repositories, along with features such 
    as issue tracking, pull requests, code review, project management, and collaboration tools.
    While Git is the underlying version control system, GitHub adds a layer of social coding and collaboration 
    features on top of Git.